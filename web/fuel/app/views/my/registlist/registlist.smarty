<p>会員登録リスト</p>

<table id="tbl" class="sample_01 registlist-block-admin">
  <thead>
    <tr>
      <!-- お名前 -->
      <th>お名前</th>
      <!-- メールアドレス -->
      <th>Email</th>
      <!-- 年齢 -->
      <th>ご年齢</th>
      <!-- Facebook -->
      <th>Facebook</th>
      <!-- Facebook -->
      <th></th>
    </tr>
  </thead>
  <tbody>
    {foreach from=$registlist item=email}
    {if $email.email eq '' || $email.email eq 'komori@sundaylunch.jp' || $email.email eq 'komori@toetheline.jp' || $email.email eq 'komokei0909@gmail.com' || $email.email eq 'akimoto@mk.team' || $email.email eq 'komori@sundaylunch,jp' || $email.email eq 'komori@sundaylunch.com'}
    {else}
      <tr>
        <td>{$email.name}</td>
        <td>{$email.email}</td>
        <td>{$email.age}</td>
        <td><a target="_blank" href="{$email.facebook}"><img src="/images/icon/facebook.png" width="30px;"></a></td>
        <td><a class="admin-registlist-more" href="/my/registlist/{$email.code}">情報をもっと見る</a></td>
      </tr>
    {/if}
    {/foreach}
  </tbody>
</table>

<a href="#" id="download">CSVダウンロード</a>


<style>
.sample_01{
width: 100%;
border-collapse: collapse;
}
.sample_01 th{
text-align: center;
padding: 6px;
vertical-align: top;
color: #333;
background-color: #eee;
border: 1px solid #b9b9b9;
}
.sample_01 td{
text-align: center;
padding: 6px;
line-height: 40px;
background-color: #fff;
border: 1px solid #b9b9b9;
}
.registlist-block-admin {

}
.registlist-block-admin td a {
  transition: 0.5s;
}
.registlist-block-admin td a:hover {
  color: #fff;
  opacity: 0.5;
  text-decoration: none;
}
.admin-registlist-more {
  padding: 8px 10px;
  color: #fff;
  background-color: #7CDCCE;
}
</style>


<script>
var tableToCSV = {
  export: function(elm /*, delimiter */) {
    var table = elm;
    var rows  = this.getRows(table);
    var lines = [];
    var delimiter = delimiter || ',';

    for (var i = 0, numOfRows = rows.length; i < numOfRows; i++) {
      var cols    = this.getCols(rows[i]);
      var line = [];

      for (var j = 0, numOfCols = cols.length; j < numOfCols; j++) {
          var text = cols[j].textContent || cols[j].innerText;
          text = '"'+text.replace(/"/g, '""')+'"';

          line.push(text);
      }

      lines.push(line.join(delimiter));
    }

    this.saveAsFile(lines.join("\r\n"));
  },

  saveAsFile: function(csv) {
    var blob = new Blob([csv]);
    var url  = URL.createObjectURL(blob);

    var a = document.createElement("a");

    a.href = url;
    a.target = '_blank';
    a.download = '会員リスト.csv';

    a.click();
  },

  getRows: function(elm){
    return Util.getNodesByName(elm, 'tr');
  },

  getCols: function(elm){
    return Util.getNodesByName(elm, ['td', 'th']);
  }
}

var Util = {
  getNodesByName: function(elm /*, string or array*/) {
    var children  = elm.childNodes;
    var nodeNames = ('string' === typeof arguments[1]) ? [arguments[1]] : arguments[1] ;
    nodeNames = nodeNames.map(function(str){ return str.toLowerCase() });

    var results  = [];

    for (var i = 0, max = children.length; i < max; i++ ) {
      if (nodeNames.indexOf(children[i].nodeName.toLowerCase()) !== -1)
      {
         results.push(children[i]);
      }
      else
      {
         results = results.concat(this.getNodesByName(children[i], nodeNames));
      }
    }

    return results;
  }
}

window.onload = function(){
  document.getElementById('download').addEventListener('click', function (e){ e.preventDefault(); tableToCSV.export(document.getElementById('tbl')); });
}

</script>