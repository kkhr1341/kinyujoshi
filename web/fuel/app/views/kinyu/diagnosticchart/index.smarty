<link type="text/css" rel="stylesheet" href="/assets/css/kinyu/singlepage.css" />
<link href="https://fonts.googleapis.com/css?family=Dancing+Script" rel="stylesheet">

<div class="kinyu-single-block joshikai-main-block kinjo_check">
<p class="diagnosticchart-subtitle">診断チャート</p>
  <div class="inner">

    <!--<h2 class="kinyu-top-main-title">診断チャート</h2>-->

    <div class="diagnosticchart-intro-container">

        <!--<div class="diagnosticchart-intro-message">テキストテキストテキストテキストテキストテキストテキストテキストテキスト</div>-->
		<div class="diagnosticchart-intro-image pc"><img src="/images/diagnosticchart/chart_main.jpg"></div>
		<div class="diagnosticchart-intro-image sp"><img src="/images/diagnosticchart/chart_main_sp.jpg"></div>
		<div class="diagnosticchart-intro-text">
			<p class="diagnosticchart-intro-text-title"><img src="/images/diagnosticchart/type_ttl.png"></p>
			<p class="diagnosticchart-intro-text-description">豊かに生きるための第一歩は「自分を知ること」です。<br>どんな風になりたい？<br>どんな人生を送りたい？<br>そして、わたしはどんな人なの？<br>そこがわかってこそ、お金の使い方や増やし方も見えてくるし、自分で選ぶこともできる。<br>自分がどのタイプなのか、診断してみましょう。</p>
		</div>
        <div class="diagnosticchart-intro-start">
            <button class="btn btn-primary ripple" data-is_diagnosed="{$is_diagnosed}">診断スタート♪<span class="ripple__effect is-white"></span></button>
            {if $is_diagnosed == true}
                <div class="reset-timer" data-reset_time="{$reset_time}">
                  <span class="reset-timer-text">のこり</span>
                  <span class="reset-timer-time"></span>
                </div>
            {/if}
        </div>
	<div class="diagnosticchart-intro-type-img"><img src="/images/diagnosticchart/4type.png"> </div>
	<div class="diagnosticchart-intro-start">
            <button class="btn btn-primary ripple" data-is_diagnosed="{$is_diagnosed}">診断スタート♪<span class="ripple__effect is-white"></span></button>
            {if $is_diagnosed == true}
                <div class="reset-timer" data-reset_time="{$reset_time}">
                  <span class="reset-timer-text">のこり</span>
                  <span class="reset-timer-time"></span>
                </div>
            {/if}
        </div>
    </div>

    <div class="diagnosticchart-question-container">
		<div class="diagnosticchart-question-el">
        <div class="diagnosticchart-question">
			<div class="diagnosticchart-question-number"></div>
			<div class="diagnosticchart-question-text-wrapper"><div class="diagnosticchart-question-text"></div></div>
		
			<div class="diagnosticchart-answer">
				<button class="btn btn-primary btn-yes ripple">YES<span class="ripple__effect is-white"></span></button>
				<button class="btn btn-primary btn-no ripple">NO<span class="ripple__effect is-white"></span></button>
       		 </div>
			</div>
		</div>
    </div>

	<div class="diagnosticchart-answer-loading-container"><img src="/images/diagnosticchart/kingyo.gif"></div>
	  
    <div class="diagnosticchart-answer-container">
        <div class="diagnosticchart-answer-catchcopy"></div>
        <div class="diagnosticchart-answer-charactor"></div>
		<div class="diagnosticchart-answer-type"></div>
        <div class="diagnosticchart-answer-description"></div>
		<a href="/kinjo_type" class="diagnosticchart-answer-to-link-mypage">他のタイプを見る</a>
		<a href="/my" class="diagnosticchart-answer-to-link-mypage">マイページへ</a>
		
    </div>
  </div>
</div>


<style>
.kinjo_check .inner {
	margin-top: 0;
}	

.diagnosticchart-intro-container {
    padding-bottom: 30px;
}	
	
.diagnosticchart-subtitle {
	font-size: 18px;
	padding: 12px 0;
	text-align: center;
	background: #8ddcd1;
	color: #fff;
}
.diagnosticchart-intro-image img {
	width: 100%;
	margin-top: 30px;
}
	
.btn-yes {
	color: #fff;
    background-color: #ff9494;
    border: none;
    font-weight: normal;
	width: 200px;
	padding: 15px;
	font-size: 14px;
	margin-right: 20px;
}
	
.btn-no {
	color: #fff;
    background-color: #7eb2ff;
    border: none;
    font-weight: normal;
	padding: 15px;
	font-size: 14px;
	width: 200px;
}

.kinyu-single-block.joshikai-main-block.kinjo_check {
    background: #f8f8f8;
}
	
.diagnosticchart-question-container {
    padding: 60px 0;
}
	
.diagnosticchart-intro-message {
    text-align: center;
    border: 1px solid #bababa;
    padding: 15px;
    width: 80%;
    margin:0px auto 20px auto;
}
.diagnosticchart-intro-text {
	width: 100%;
	max-width: 650px;
	margin: 50px auto;
}
.diagnosticchart-intro-text-title {
	text-align: center;
}
.diagnosticchart-intro-text-title img {
	width: 100%;
	max-width: 300px;
}
.diagnosticchart-intro-text-description {
	text-align: center;
    margin-top: 16px;
    font-size: 13px;
    line-height: 24px;
}
.diagnosticchart-intro-start {
    text-align: center;
}
.diagnosticchart-intro-start .btn-primary {
    width: 100%;
	margin: 0px 0 30px;
	padding: 20px;
	font-size: 18px;
	font-weight: normal;
	max-width: 300px;
}
	.diagnosticchart-intro-type-img {
		text-align: center;
		margin: 30px 0;
	}
.diagnosticchart-intro-type-img img {
	width: 100%;
	max-width: 500px;
	margin: 0 auto;
}
		
.diagnosticchart-question-container {
    display: none;
}
.diagnosticchart-question {
    text-align: center;
	width: 100%;
    padding: 50px 15px;
	line-height: 1.7;
    margin: 0 auto;
	font-size: 18px;
    height: 230px;
	position: relative;
    background: #ffffff;
	display: table;
	border: solid 1px #8ddcd1;
  	outline: solid 1px #fff;
}
.diagnosticchart-question-el {
	border: solid 2px #8ddcd1;
	padding: 2px;
	width: 88%;
	max-width: 650px;
	margin: 0 auto;
}
	
.diagnosticchart-question-text-wrapper {
	height: 100px;
	display: inline-block;
    text-align: center;
}
.diagnosticchart-question-text {
	display: table-cell;
	height: 120px;
  	vertical-align: middle;
}
.diagnosticchart-question-number {
	font-family: 'Dancing Script', cursive;
	position: absolute;
	font-size: 28px;
	color: #8ddcd1;
	top: 10px;
    left: 20px;
}
.diagnosticchart-answer {
    text-align: center;
	margin-top: 50px;
}
.diagnosticchart-answer-loading-container {
    display: none;
}
.diagnosticchart-answer-container {
    display: none;
	padding: 20px 20px 30px;
}
.diagnosticchart-answer-catchcopy {
    text-align: center;
	margin: 30px 0 20px;
}
.diagnosticchart-answer-charactor {
    text-align: center;
}
.diagnosticchart-answer-charactor img {
    width: 100px;
	padding: 15px;
    background: #fff;
    border-radius: 50%;
}
.diagnosticchart-answer-type {
    font-weight: bold;
    text-align: center;
	margin: 20px 0 0;
}	
.diagnosticchart-answer-type img {
	width: 100%;
    max-width: 500px;
}
.diagnosticchart-answer-title {
    text-align: center;
}
.diagnosticchart-answer-description {
    text-align: center;
    padding: 15px;
    width: 80%;
	font-size: 13px;
	line-height: 1.6;
    margin:0px auto 20px auto;
}

.diagnosticchart-answer-top {
    text-align: center;
}	
.diagnosticchart-answer-loading-container {
	text-align: center;
	padding: 80px 0;
	height: 432px;
}
.diagnosticchart-answer-loading-container img {
	width: 100%;
	max-width: 250px;
}
	
/* each type style */


.diagnosticchart-answer {
  
}

.diagnosticchart-answer-container.type-A {
    background-color: #eff7ed;
}
.diagnosticchart-answer-container.type-B {
    background-color: #fdf5f9;
}

.diagnosticchart-answer-container.type-C {
    background-color: #EFF8F9;
}

.diagnosticchart-answer-container.type-D {
    background-color: #F7F0F0;
}
.diagnosticchart-answer-to-link-mypage {
	display: block;
	width: 200px;
    padding: 13px 0px;
    margin: 0 auto;
    margin-top: 16px;
    text-align: center;
    height: auto;
    background-color: #8ddcd1;
    color: #fff;
    transition: .5s;
}
	
.diagnosticchart-answer-to-link-mypage:hover {
	opacity: .8;
}

@media screen and (max-width: 480px) {
	.kinyu-single-block.joshikai-main-block.kinjo_check {
		background: #fff;
	}
	.diagnosticchart-subtitle {
		font-size: 16px;
		padding: 10px;
	}
	.diagnosticchart-intro-image img {
		margin-top: 0px;
	}
	.diagnosticchart-intro-type-img img {
		width: 88%;
		margin: 0 auto;
	}
	.diagnosticchart-intro-text-title img {
		max-width: 200px;
	}
	.diagnosticchart-intro-text-title {
		font-size: 18px;
	}
	.diagnosticchart-intro-text-description {
		width: 88%;
		margin: 16px auto 0;
	}
	.kinjo_check .inner {
		width: 100%;
	}
	.diagnosticchart-question-el {
		border: none;
	}
	.diagnosticchart-intro-start .btn-primary {
		font-size: 16px;
		max-width: 100%;
		width: 88%;
	}
	.btn-yes {
		width: 88%;
		padding: 15px;
		margin-right: 0px;
	}
	.btn-no {
		width: 88%;
		padding: 15px;
		margin-top: 20px;
	}
}

	
	
/* クリックできる要素 */
.ripple {
    /* 必須 */
    overflow: hidden;
    position: relative;
}
	
.ripple::after {
  position: absolute;
  top: 50%;
  right: .2em;
  content: '';
  margin-top: -5px;
  border: 7px solid transparent;
  border-top-width: 5px;
  border-bottom-width: 5px;
  border-left-color: #fff;
  transition: all .2s;
}
.ripple:hover::after {
  right: -.05em;
}

/* エフェクト要素 */
.ripple__effect {
    /* 値の変更はエフェクト形体・サイズ・スピードに影響する */
    width: 150px;
    height: 150px;

    /* 必須 */
    position: absolute;
    border-radius: 100%;
    pointer-events: none;
    transform: scale(0);
    opacity: 0;
}

/* エフェクト要素の色を指定 */
.ripple__effect.is-orange { background: #f1c40f;}
.ripple__effect.is-white   { background: #fff;}
.ripple__effect.is-black  { background: #999;}

/* classが付与されたらアニメーションを実行 */
.ripple__effect.is-show {
    animation: ripple 0.75s ease-out;
}

/* アニメーションの定義 */
@keyframes ripple {
    from {
        opacity: 1;
    }
    to {
        transform: scale(2);
        opacity: 0;
    }
}	
	

</style>

<script>
$(function() {
    var $clickable = $('.ripple');

    /* mousedownだと直ぐに発動し、clickだとマウスボタンを離した時に発動する */
    $clickable.on('mousedown', function(e) {
        var _self   = this;
        var x       = e.offsetX;
        var y       = e.offsetY;

        var $effect = $(_self).find('.ripple__effect');
        var w       = $effect.width();
        var h       = $effect.height();

        /* クリックした座標を中心とする */
        $effect.css({
            left: x - w / 2,
            top: y - h / 2
        });

        /* jsではclassの付け替えをするだけ */
        if (!$effect.hasClass('is-show')) {
            $effect.addClass('is-show');

            /*
             * エフェクトアニメーションが終わったらclassを削除する
             * ここでは、単純にcssで設定するdurationと時間を合わせているだけですが
             * keyframes終了のイベント(AnimationEnd)が取れるかと思うので、それで対応した方が良いかも
             */
            setTimeout(function() {
                $effect.removeClass('is-show');
            }, 750);
        }
        return false;
    });

});
</script>


<script>
{literal}

// 診断が有効化されるまでのカウントダウン処理
function countDown($element, endDate, callback) {
  var startDateTime = new Date();
  var endDateTime = new Date(endDate);
  var left = endDateTime - startDateTime;

  if (left <= 0) {
    $element.text('');
    callback();
    return;
  }

  var a_day = 24 * 60 * 60 * 1000;

  var d = Math.floor(left / a_day) 

  var h = Math.floor((left % a_day) / (60 * 60 * 1000)) 

  var m = Math.floor((left % a_day) / (60 * 1000)) % 60 

  var s = Math.floor((left % a_day) / 1000) % 60 % 60 

  $element.find('.reset-timer-time').text(d + '日' + h + '時間' + m + '分' + s + '秒');
  setTimeout(function() {
    countDown($element, endDate, callback);
  }, 1000);
}

$(function(){

  var $introContainer  = $('.diagnosticchart-intro-container');
  var $questionContainer  = $('.diagnosticchart-question-container');
  var $answerLoadingContainer  = $('.diagnosticchart-answer-loading-container');
  var $answerContainer  = $('.diagnosticchart-answer-container');

  var $startButton  = $introContainer.find('button');

  var $questionNumber  = $('.diagnosticchart-question-number');
  var $questionText  = $('.diagnosticchart-question-text');
  var $yesButton = $('.diagnosticchart-answer .btn-yes');
  var $noButton  = $('.diagnosticchart-answer .btn-no');

  var $answerCatchcopy   = $('.diagnosticchart-answer-catchcopy');
  var $answerCharactor   = $('.diagnosticchart-answer-charactor');
  var $answerType        = $('.diagnosticchart-answer-type');
  var $answerTitle       = $('.diagnosticchart-answer-title');
  var $answerDescription = $('.diagnosticchart-answer-description');

  var routes = [];

  // 回答
  function answer(route_id, number) {
    var route_id = route_id || '';
    var number = number || 1;

    $questionText.fadeOut();

    $.getJSON('/api/diagnosticchart/route/' + route_id, function(response) {
      var current_route_code = response.data.current_route_code;
      var question = response.data.question;

      var yes_type_code = response.data.yes_type_code || '';
      var yes_route_code = response.data.yes_route_code || '';
      var no_type_code = response.data.no_type_code || '';
      var no_route_code = response.data.no_route_code || '';

      $questionNumber.text('Step' + number);
      $questionText.html(question.replace(/\\n/g, '<br>'));

      routes.push(current_route_code);

      $yesButton.off('click').on('click', function() {
        if(yes_type_code) {
          // complete
          answerLoading(yes_type_code);
        } else if(yes_route_code) {
          // answer
          answer(yes_route_code, ++number);
        }
      });
      $noButton.off('click').on('click', function() {
        if(no_type_code) {
          // complete
          answerLoading(no_type_code);
        } else if(no_route_code) {
          // answer
          answer(no_route_code, ++number);
        }
       });
       $questionText.fadeIn();
    });
  }

  // 完了画面表示
  function answerLoading(type_code) {
      $questionContainer.fadeOut(1500, function() {
		  setTimeout(function() {
			  $answerLoadingContainer.fadeIn(1000, function() {
				  setTimeout(function() {
				  	completed(type_code);
				  }, 3000)
			  });
		   }, 500)
	  });
  }
	  
  // 完了画面表示
  function completed(type_code) {
    $answerLoadingContainer.fadeOut();

    $.ajax({
      type: "POST",
      url: "/api/diagnosticchart/type/",
      data: {
          "type_code": type_code,
          "routes": routes
      },
      success: function(response){

        var value = JSON.parse(response);

        var catch_copy = value.data.catch_copy || '';
        var type_image = value.data.type_image || '';
        var character_image = value.data.character_image || '';
        var type = value.data.type || '';
        var title = value.data.title || '';
        var description = value.data.description || '';

        $answerCatchcopy.html(catch_copy);
        $answerCharactor.html($('<img>', {src:character_image}));
        $answerType.html($('<img>', {src:type_image}));
        $answerTitle.html(title);
        $answerDescription.html(description.replace(/\\n/g, '<br>'));

        $answerContainer.addClass('type-' + type);

        $answerContainer.fadeIn(3000);
      }
    });
  }

  // START ボタン
  $startButton.on('click', function() {
    $introContainer.fadeOut();
    $questionContainer.fadeIn();
    answer();
  })
 
  // 診断の実行可否処理
  // 診断の実行ができる状態であれば「診断スタート」ボタンクリック可
  // 診断の実行ができない状態であれば「診断スタート」ボタンクリック不可・カウントダウン実行
  var is_diagnosed = $startButton.data('is_diagnosed') == '1' ? true : false;
  $startButton.prop('disabled', is_diagnosed);
  if (is_diagnosed == true) {
    $('.reset-timer').each(function() {
      var endDate = $(this).data('reset_time');
      countDown($(this), endDate, function() {
        $startButton.prop('disabled', false);
      });
    })
  }
});
{/literal}
</script>

